So, I'm going use perl, and I'm going to dump out registers and memory on the command line to start.

Need to break this into an assembler and an emulator.

assembler consumes assembly code and outputs compiled "machine" code -- newline separated instructions, presumably

emulator consumes machine code, executes it, and produces a memory dump

initial goal: get the assembler and emulator to the point where this program:
SET A, 0x0010

so, I've got an assembler (kind of)
now for the emulator
it should be able to dump the registers
it should read an instruction, and dump the registers again

should call this thing "scrat-dcpu" since I am about as good at writing assemblers and emulators as scrat is at protecting his acorn.

may as well include a disassembler
